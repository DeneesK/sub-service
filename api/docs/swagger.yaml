basePath: /api/v1
definitions:
  model.Subscription:
    properties:
      end_date:
        type: string
      id:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  model.UpdateSubscription:
    properties:
      end_date:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API for managing subscriptions
  title: Subscription API
  version: "1.0"
paths:
  /subs:
    get:
      description: Get list of subscriptions by user_id. If user_id is empty returns
        all subs
      parameters:
      - description: User ID (optional)
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Subscription'
            type: array
      summary: Get list of subscriptions
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Create a new subscription record
      parameters:
      - description: Subscription object
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/model.Subscription'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Subscription'
      summary: Create subscription
      tags:
      - subscriptions
  /subs/{id}:
    delete:
      description: Delete subscription by its id
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete subscription
      tags:
      - subscriptions
    get:
      description: Get subscription by its id
      parameters:
      - description: Subscription id
        in: query
        name: id
        required: true
        type: string
      - description: Subscription object
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/model.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Subscription'
      summary: Get subscription
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Update subscription by its id
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      - description: UpdateSubscription object
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/model.UpdateSubscription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Subscription'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update subscription
      tags:
      - subscriptions
  /subs/aggregate:
    get:
      description: Sum prices between dates, optional filters user_id & service_name
      parameters:
      - description: Start month-year
        example: 2025-01
        in: query
        name: from
        required: true
        type: string
      - description: End month-year
        example: 2025-07
        in: query
        name: to
        required: true
        type: string
      - description: User ID (optional)
        in: query
        name: user_id
        type: string
      - description: Service name(optional)
        in: query
        name: service_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
      summary: Aggregate subscriptions cost
      tags:
      - subscriptions
swagger: "2.0"
